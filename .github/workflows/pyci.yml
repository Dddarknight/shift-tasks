name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run Ruff
        run: ruff check .

  build-and-push:
    needs: code-quality
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for PostgreSQL
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: Dockerfile.postgres
          push: true
          tags: ghcr.io/dddarknight/shift_tasks_db:latest

      - name: Build and push Docker image for backend
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: Dockerfile.backend
          push: true
          tags: ghcr.io/dddarknight/shift_tasks_backend:latest
          build-args: |
            DATABASE_TEST_URL=${{ secrets.DATABASE_TEST_URL }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            POSTGRES_DB_USER=${{ secrets.POSTGRES_DB_USER }}
            POSTGRES_DB_PASSWORD=${{ secrets.POSTGRES_DB_PASSWORD }}
            POSTGRES_DB_NAME=${{ secrets.POSTGRES_DB_NAME }}
            POSTGRES_DB_TEST_NAME=${{ secrets.POSTGRES_DB_TEST_NAME }}
            APP_PORT=${{ secrets.APP_PORT }}
            HOST=${{ secrets.HOST }}
            CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}
            CORS_HEADERS=${{ secrets.CORS_HEADERS }}
            EXTERNAL_APP_PORT=${{ secrets.EXTERNAL_APP_PORT }}
            POSTGRES_EXTERNAL_PORT=${{ secrets.POSTGRES_EXTERNAL_PORT }}

  build-and-push-testing:
    needs: code-quality
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and run the Docker containers with Docker Compose
        run: |
          docker compose -f ./deploy/docker-compose.test.yml up --build --abort-on-container-exit --exit-code-from testing_shift_tasks_backend

      - name: Docker Compose down and cleanup
        if: always()
        run: |
          docker compose -f ./deploy/docker-compose.test.yml down
          docker volume rm $(docker volume ls -q)
